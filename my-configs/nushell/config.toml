skip_welcome_message = true
complete_from_path = true
nonzero_exit_errors = true
disable_table_indexes = true
path = ["/home/user/bin", "/usr/local/bin", "/usr/bin", "/bin", "/usr/local/games", "/usr/games", "/home/user/.deno/bin"]
prompt = "echo [ $(char newline) $(ansi blue) $(short-path $(pwd-segments)) $(ansi reset) $(do -i {git rev-parse --abbrev-ref HEAD } | str trim | each { echo [ \" \" $(ansi green) $it $(ansi reset) \" \" $(repo-status) ] } | str collect) $(char newline) $(ansi purple) \"❯ \"] | str collect"

startup = [
  "alias - = cd -",
  "alias c1 = cd ../",
  "alias c2 = cd ../../",
  "alias c3 = cd ../../../",
  "alias c4 = cd ../../../../",
  "alias cl = clear",
  "alias la = ls -l -a",
  "def ll [dir:string] { ls -a -l $dir | select name type mode uid size created accessed modified }",
  "def fh [] { history | reverse | to csv -s $(char newline) | fzf | str trim | xsel -i -b }",
  "alias lzg = lazygit",
  "def ps-info [val:string] { ps | where name =~ $val }",
  "def ps-mem [] { ps | select pid name cpu mem | where mem > 1mb | sort-by mem | reverse }",
  "def ps-top [] { ps | select pid name cpu mem | sort-by mem | reverse | first 10 }",
  "def ps-active [] { ps | select pid name cpu mem | where cpu > 0 | sort-by cpu | reverse }",
  "def sys-net [] { sys | get net }",
  "def sys-uptime [] { sys | get host | get uptime }",
  "def sys-env [] { echo $nu.env | pivot name value }",
  "alias np = pnpm",
  "alias npr = pnpm run",
  "alias ta = tmux attach -t",
  "alias tl = tmux list-sessions",
  "alias ts = tmux new-session -A -D -s",
  "alias tmus = tmux new-session -A -D -s music cmus",
  "alias tvi = tmux new-session -A -D -s vi",
  "alias pomd = tmux new-session -A -D -s pomodoro 'gone -e \"notify-send -u critical Pomodoro Timeout\"'",
  "alias dcc = docker-compose",
  "alias doc-start = systemctl start docker",
  "alias doc-ls = docker ps -a",
  "alias yt = youtube-dl -f 'bestvideo[height<=720]+bestaudio/best[height<=720]'",
  "def pwd-segments [] { pwd | str find-replace $nu.home-dir \"~\" | split row \"/\" }",
  "def short-path [path] { echo $path | count | each { if $it > 3 { echo $path | reverse | range 0..2 | reverse } { echo $path } } | to csv -s \"/\" | str trim }",
  "def repo-status [] { git status -s | count | each { if $it == 0 { format \"{$(ansi green)}✔\" } { format \"{$(ansi red)}✗\" } } | each { format \"{$it} {$(ansi reset)}\" } }",
]

[line_editor]
max_history_size=2000
history_duplicates = "ignoreconsecutive"
history_ignore_space = true

[env]
BAT_THEME = "base16"
EDITOR = "nvim"
FZF_DEFAULT_COMMAND = "rg --files --hidden --follow --glob \"!.git/*\" --glob \"!cache/*\" --glob \"!node_modules/*\""
FZF_DEFAULT_OPTS = "--layout=reverse --border"
DENO_INSTALL = "/home/user/.deno"
HOMEBREW_CELLAR = "/home/linuxbrew/.linuxbrew/Cellar"
HOMEBREW_PREFIX = "/home/linuxbrew/.linuxbrew"
HOMEBREW_REPOSITORY = "/home/linuxbrew/.linuxbrew/Homebrew"
INFOPATH = "/home/linuxbrew/.linuxbrew/share/info"
LYNX_LSS = "/home/user/.config/lynx/lynx.lss"
LYNX_CFG = "/home/user/.config/lynx/lynx.cfg"
MANPATH = "/home/linuxbrew/.linuxbrew/share/man"
PYTHONUSERBASE = "/home/user/.local"
NNN_FCOLORS = "c1e20402000506f7c6d6ab09"

